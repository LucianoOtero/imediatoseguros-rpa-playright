#!/usr/bin/env python3
"""
RPA T√¥ Segurado - Continuando da Tela 9 (AUTOCOMPLETE FUNCIONANDO)
Continua o fluxo a partir da Tela 9 com autocomplete autom√°tico
"""

import time
import tempfile
import shutil
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

def configurar_chrome():
    """Configura o Chrome com op√ß√µes otimizadas"""
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    # Criar diret√≥rio tempor√°rio √∫nico
    temp_dir = tempfile.mkdtemp()
    chrome_options.add_argument(f"--user-data-dir={temp_dir}")
    
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    return driver, temp_dir

def navegar_ate_tela8(driver):
    """Navega at√© a Tela 8 (tipo de combust√≠vel)"""
    print("üöÄ **NAVEGANDO AT√â TELA 8...**")
    
    # Tela 1: Selecionar Carro
    driver.get("https://www.app.tosegurado.com.br/cotacao")
    time.sleep(3)
    
    carro_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Carro')]"))
    )
    carro_button.click()
    print("‚úÖ Tela 1: Carro selecionado")
    time.sleep(2)
    
    # Tela 2: Inserir placa
    placa_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, "placaTelaPlaca"))
    )
    placa_input.clear()
    placa_input.send_keys("EED3D56")
    print("‚úÖ Tela 2: Placa EED3D56 inserida")
    time.sleep(2)
    
    # Tela 3: Clicar Continuar
    continuar_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_button.click()
    print("‚úÖ Tela 3: Continuar clicado")
    time.sleep(3)
    
    # Tela 5: Confirmar ve√≠culo
    sim_radio = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@value='Sim']"))
    )
    driver.execute_script("arguments[0].click();", sim_radio)
    print("‚úÖ Tela 5: Ve√≠culo confirmado")
    time.sleep(2)
    
    # Tela 6: Ve√≠culo j√° segurado
    nao_radio = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@value='N√£o']"))
    )
    driver.execute_script("arguments[0].click();", nao_radio)
    print("‚úÖ Tela 6: Continuar clicado")
    time.sleep(2)
    
    # Clicar Continuar na Tela 6
    continuar_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Continuar')]"))
    )
    continuar_button.click()
    print("‚úÖ Continuar clicado na Tela 6")
    time.sleep(3)
    
    # Tela 7: Aguardar carregamento da estimativa
    WebDriverWait(driver, 20).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'estimativa inicial')]"))
    )
    print("‚úÖ Tela 7 carregada - estimativa inicial")
    time.sleep(2)
    
    # Clicar Continuar na Tela 7
    continuar_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Continuar')]"))
    )
    continuar_button.click()
    print("‚úÖ Continuar clicado na Tela 7")
    time.sleep(3)
    
    # Tela 8: Tipo de combust√≠vel
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'Tipo de Combust√≠vel')]"))
    )
    print("‚úÖ Tela 8 carregada - tipo de combust√≠vel")
    time.sleep(2)
    
    # Selecionar Flex
    flex_radio = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//input[@value='Flex']"))
    )
    flex_radio.click()
    print("‚úÖ Flex selecionado na Tela 8")
    time.sleep(2)
    
    # Clicar Continuar na Tela 8
    continuar_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Continuar')]"))
    )
    continuar_button.click()
    print("‚úÖ Continuar clicado na Tela 8")
    time.sleep(3)

def preencher_tela9_autocomplete(driver):
    """Preenche a Tela 9 usando autocomplete autom√°tico"""
    print("\nÔøΩÔøΩ **PREENCHENDO TELA 9 COM AUTOCOMPLETE...**")
    
    # Aguardar Tela 9 carregar
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'Onde o carro passa a noite')]"))
    )
    print("‚úÖ Tela 9 carregada - endere√ßo onde o carro passa a noite")
    time.sleep(2)
    
    # Encontrar campo CEP
    cep_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, "enderecoTelaEndereco"))
    )
    print("‚úÖ Campo CEP encontrado")
    
    # Limpar campo e digitar CEP completo (para ativar autocomplete)
    cep_input.clear()
    cep_input.send_keys("03084-000")  # CEP de S√£o Paulo
    print("‚úÖ CEP 03084-000 digitado")
    time.sleep(3)  # Aguardar autocomplete abrir
    
    # Aguardar sugest√µes aparecerem
    try:
        sugestao = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'S√£o Paulo')]"))
        )
        print("‚úÖ Sugest√£o de endere√ßo detectada")
        
        # Clicar na primeira sugest√£o (geralmente a mais relevante)
        sugestao.click()
        print("‚úÖ Sugest√£o selecionada")
        time.sleep(2)
        
    except Exception as e:
        print(f"‚ö†Ô∏è N√£o foi poss√≠vel selecionar sugest√£o automaticamente: {e}")
        print("ÔøΩÔøΩ Tentando preencher manualmente...")
        
        # Se n√£o conseguir selecionar, preencher manualmente
        cep_input.clear()
        cep_input.send_keys("Rua Serra de Botucatu, Tatuap√© - S√£o Paulo/SP")
        print("‚úÖ Endere√ßo preenchido manualmente")
        time.sleep(2)
    
    # Verificar se o endere√ßo foi preenchido
    endereco_preenchido = cep_input.get_attribute("value")
    print(f"üìù Endere√ßo preenchido: {endereco_preenchido}")
    
    # Salvar HTML da Tela 9
    with open("/opt/imediatoseguros-rpa/temp/tela9-endereco-preenchido.html", "w", encoding="utf-8") as f:
        f.write(driver.page_source)
    print("ÔøΩÔøΩ HTML da Tela 9 salvo")
    
    # Clicar em Continuar
    continuar_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, "gtm-telaPernoiteVeiculoContinuar"))
    )
    continuar_button.click()
    print("‚úÖ Continuar clicado na Tela 9")
    time.sleep(3)
    
    # Verificar se avan√ßou para pr√≥xima tela
    try:
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'uso do ve√≠culo')]"))
        )
        print("‚úÖ Tela 10 carregada - uso do ve√≠culo")
        return True
    except:
        print("‚ùå Tela 10 n√£o carregou")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ **RPA T√î SEGURADO - CONTINUANDO DA TELA 9 (AUTOCOMPLETE FUNCIONANDO)**")
    print("=" * 70)
    
    driver = None
    temp_dir = None
    
    try:
        # Configurar Chrome
        driver, temp_dir = configurar_chrome()
        print("‚úÖ Chrome configurado")
        
        # Navegar at√© Tela 8
        navegar_ate_tela8(driver)
        
        # Preencher Tela 9 com autocomplete
        sucesso = preencher_tela9_autocomplete(driver)
        
        if sucesso:
            print("\nÔøΩÔøΩ **TELA 9 CONCLU√çDA COM SUCESSO!**")
            print("‚úÖ Endere√ßo preenchido com autocomplete")
            print("‚úÖ Navegou para Tela 10")
        else:
            print("\n‚ùå **PROBLEMA NA TELA 9**")
            print("‚ùå N√£o foi poss√≠vel avan√ßar para Tela 10")
        
    except Exception as e:
        print(f"\n‚ùå **ERRO DURANTE EXECU√á√ÉO:** {e}")
        if driver:
            driver.save_screenshot("/opt/imediatoseguros-rpa/temp/erro-tela9-autocomplete.png")
            print("ÔøΩÔøΩ Screenshot do erro salvo")
    
    finally:
        if driver:
            driver.quit()
        if temp_dir:
            shutil.rmtree(temp_dir)
            print(f"üóëÔ∏è Diret√≥rio tempor√°rio removido: {temp_dir}")

if __name__ == "__main__":
    main()
