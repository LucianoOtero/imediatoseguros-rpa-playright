#!/usr/bin/env python3
"""
Investiga√ß√£o Detalhada da Tela 7 - RPA T√¥ Segurado
Analisa o que realmente aconteceu ap√≥s clicar Continuar na Tela 6
"""

import time
import tempfile
import shutil
import os
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

def configurar_chrome():
    """Configura o Chrome com op√ß√µes otimizadas"""
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    # Criar diret√≥rio tempor√°rio √∫nico
    temp_dir = tempfile.mkdtemp()
    chrome_options.add_argument(f"--user-data-dir={temp_dir}")
    
    # Configurar o driver
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    return driver, temp_dir

def navegar_ate_tela6(driver):
    """Navega at√© a Tela 6 (√∫ltima tela funcionando)"""
    print("üöÄ **NAVEGANDO AT√â TELA 6 (√öLTIMA FUNCIONANDO)**")
    
    try:
        # Tela 1: Selecionar Carro
        print("\nüì± TELA 1: Selecionando Carro...")
        driver.get("https://www.app.tosegurado.com.br/cotacao")
        time.sleep(5)
        
        carro_button = WebDriverWait(driver, 20).until(
            EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Carro')]"))
        )
        carro_button.click()
        print("‚úÖ Carro selecionado")
        time.sleep(3)
        
        # Tela 2: Inserir placa
        print("\nüì± TELA 2: Inserindo placa...")
        placa_input = WebDriverWait(driver, 30).until(
            EC.presence_of_element_located((By.ID, "placaTelaDadosPlaca"))
        )
        placa_input.clear()
        placa_input.send_keys("EED3D56")
        print("‚úÖ Placa EED3D56 inserida")
        time.sleep(2)
        
        # Tela 3: Clicar Continuar
        print("\nüì± TELA 3: Clicando Continuar...")
        continuar_button = WebDriverWait(driver, 30).until(
            EC.element_to_be_clickable((By.ID, "gtm-telaDadosAutoCotarComPlacaContinuar"))
        )
        continuar_button.click()
        print("‚úÖ Continuar clicado")
        time.sleep(5)
        
        # Tela 5: Confirmar ve√≠culo
        print("\nüì± TELA 5: Confirmando ve√≠culo...")
        WebDriverWait(driver, 40).until(
            EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'COROLLA')]"))
        )
        
        sim_radio = WebDriverWait(driver, 30).until(
            EC.presence_of_element_located((By.XPATH, "//input[@value='Sim']"))
        )
        driver.execute_script("arguments[0].click();", sim_radio)
        print("‚úÖ Ve√≠culo confirmado")
        time.sleep(3)
        
        # Tela 6: Ve√≠culo segurado
        print("\nüì± TELA 6: Selecionando 'N√£o' para ve√≠culo segurado...")
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.NAME, "confirmarVeiculoTelaInformacoesVeiculo"))
        )
        
        nao_radio = driver.find_element(By.XPATH, "//input[@value='N√£o']")
        if not nao_radio.is_selected():
            driver.execute_script("arguments[0].click();", nao_radio)
            print("‚úÖ Radio 'N√£o' selecionado")
            time.sleep(2)
        
        print("‚úÖ TELA 6 CARREGADA COM SUCESSO!")
        return True
        
    except Exception as e:
        print(f"‚ùå **ERRO AO NAVEGAR AT√â TELA 6:** {e}")
        return False

def investigar_transicao_tela6_7(driver):
    """Investiga o que acontece na transi√ß√£o da Tela 6 para Tela 7"""
    print("\nüîç **INVESTIGANDO TRANSI√á√ÉO TELA 6 ‚Üí TELA 7**")
    
    try:
        # Salvar estado da Tela 6
        print("ÔøΩÔøΩ Salvando estado da Tela 6...")
        with open("/opt/imediatoseguros-rpa/temp/tela_06_investigacao.html", "w", encoding="utf-8") as f:
            f.write(driver.page_source)
        driver.save_screenshot("/opt/imediatoseguros-rpa/temp/tela_06_investigacao.png")
        print("‚úÖ Estado da Tela 6 salvo")
        
        # Clicar em Continuar na Tela 6
        print("\nüéØ Clicando em Continuar na Tela 6...")
        continuar_button = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.ID, "gtm-telaInfosAutoContinuar"))
        )
        
        # Salvar estado antes do clique
        print("üì∏ Estado antes do clique...")
        with open("/opt/imediatoseguros-rpa/temp/tela_06_antes_clique.html", "w", encoding="utf-8") as f:
            f.write(driver.page_source)
        driver.save_screenshot("/opt/imediatoseguros-rpa/temp/tela_06_antes_clique.png")
        
        # Clicar e monitorar mudan√ßas
        print("üñ±Ô∏è Clicando em Continuar...")
        continuar_button.click()
        print("‚úÖ Continuar clicado")
        
        # Monitorar mudan√ßas por 30 segundos
        print("\n‚è≥ Monitorando mudan√ßas por 30 segundos...")
        for i in range(30):
            time.sleep(1)
            current_url = driver.current_url
            current_title = driver.title
            
            print(f"‚è±Ô∏è {i+1:02d}s - URL: {current_url}")
            print(f"     T√≠tulo: {current_title}")
            
            # Verificar se apareceu algum texto espec√≠fico
            page_text = driver.page_source.lower()
            
            if "estimativa" in page_text:
                print("üéØ 'ESTIMATIVA' DETECTADO!")
                break
            elif "carrossel" in page_text:
                print("ÔøΩÔøΩ 'CARROSSEL' DETECTADO!")
                break
            elif "cobertura" in page_text:
                print("üõ°Ô∏è 'COBERTURA' DETECTADO!")
                break
            elif "loading" in page_text or "aguarde" in page_text or "calculando" in page_text:
                print("‚è≥ ELEMENTO DE CARREGAMENTO DETECTADO!")
                break
        
        # Salvar estado final
        print("\nüì∏ Salvando estado final...")
        with open("/opt/imediatoseguros-rpa/temp/tela_07_investigacao.html", "w", encoding="utf-8") as f:
            f.write(driver.page_source)
        driver.save_screenshot("/opt/imediatoseguros-rpa/temp/tela_07_investigacao.png")
        
        # An√°lise final
        print("\nÔøΩÔøΩ **AN√ÅLISE FINAL:**")
        print(f"URL Final: {driver.current_url}")
        print(f"T√≠tulo Final: {driver.title}")
        
        page_text = driver.page_source.lower()
        
        print("\nÔøΩÔøΩ **ELEMENTOS DETECTADOS:**")
        if "estimativa" in page_text:
            print("‚úÖ 'estimativa' - POSS√çVEL TELA 7")
        else:
            print("‚ùå 'estimativa' - N√ÉO ENCONTRADO")
            
        if "carrossel" in page_text:
            print("‚úÖ 'carrossel' - POSS√çVEL TELA 7")
        else:
            print("‚ùå 'carrossel' - N√ÉO ENCONTRADO")
            
        if "cobertura" in page_text:
            print("‚úÖ 'cobertura' - POSS√çVEL TELA 7")
        else:
            print("‚ùå 'cobertura' - N√ÉO ENCONTRADO")
            
        if "loading" in page_text or "aguarde" in page_text or "calculando" in page_text:
            print("‚úÖ Elementos de carregamento detectados")
        else:
            print("‚ùå Elementos de carregamento n√£o encontrados")
        
        # Verificar se houve erro
        if "error" in page_text or "erro" in page_text:
            print("‚ö†Ô∏è POSS√çVEL ERRO DETECTADO NA P√ÅGINA")
        
        return True
        
    except Exception as e:
        print(f"‚ùå **ERRO NA INVESTIGA√á√ÉO:** {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("ÔøΩÔøΩ **INVESTIGA√á√ÉO DETALHADA DA TELA 7**")
    print("=" * 60)
    print(f"‚è∞ In√≠cio: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    driver = None
    temp_dir = None
    
    try:
        # Configurar Chrome
        driver, temp_dir = configurar_chrome()
        print("‚úÖ Chrome configurado")
        
        # Navegar at√© Tela 6
        if not navegar_ate_tela6(driver):
            print("‚ùå **FALHA AO NAVEGAR AT√â TELA 6 - PARANDO**")
            return
        
        # Investigar transi√ß√£o Tela 6 ‚Üí Tela 7
        if not investigar_transicao_tela6_7(driver):
            print("‚ùå **FALHA NA INVESTIGA√á√ÉO - PARANDO**")
            return
        
        print(f"\nÔøΩÔøΩ **INVESTIGA√á√ÉO CONCLU√çDA COM SUCESSO!**")
        print(f"ÔøΩÔøΩ Arquivos salvos em: /opt/imediatoseguros-rpa/temp/")
        print(f"üîç Verifique os arquivos HTML e screenshots para an√°lise")
        
    except Exception as e:
        print(f"\n‚ùå **ERRO GERAL DURANTE INVESTIGA√á√ÉO:** {e}")
        if driver:
            driver.save_screenshot("/opt/imediatoseguros-rpa/temp/erro-investigacao.png")
            print(" Screenshot do erro salvo")
    
    finally:
        if driver:
            driver.quit()
        if temp_dir:
            shutil.rmtree(temp_dir)
            print(f"üóëÔ∏è Diret√≥rio tempor√°rio removido: {temp_dir}")

if __name__ == "__main__":
    main()
