#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Tela 4 - Confirma√ß√£o de Ve√≠culo Segurado
M√≥dulo isolado para navega√ß√£o da Tela 4
"""

import time
from typing import Dict, Any
from playwright.sync_api import Page


def exibir_mensagem(mensagem: str):
    """Exibe mensagem formatada"""
    from datetime import datetime
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {mensagem}")


def esperar_carregamento_pagina(page: Page, timeout: int = 30):
    """Espera o carregamento completo da p√°gina"""
    try:
        page.wait_for_load_state("networkidle", timeout=timeout * 1000)
        time.sleep(2)
    except Exception as e:
        exibir_mensagem(f"‚ö†Ô∏è Timeout no carregamento da p√°gina: {e}")


def navegar_tela_4_playwright(page: Page, veiculo_segurado: Dict[str, Any]) -> bool:
    """
    Navega pela Tela 4 - Confirma√ß√£o de Ve√≠culo Segurado
    """
    try:
        exibir_mensagem("üéØ NAVEGANDO PARA TELA 4 - CONFIRMA√á√ÉO DE VE√çCULO SEGURADO")
        
        # Aguardar carregamento inicial
        esperar_carregamento_pagina(page)
        
        # Confirmar que o ve√≠culo est√° segurado
        # Esta tela geralmente √© apenas de confirma√ß√£o/leitura
        # Pode ter bot√µes como "Sim, est√° segurado" ou "Continuar"
        
        # Bot√£o de confirma√ß√£o (pode variar o nome)
        try:
            confirmar_button = page.get_by_role("button", name="Sim, est√° segurado")
            confirmar_button.click()
            exibir_mensagem("‚úÖ Confirma√ß√£o de ve√≠culo segurado clicada")
        except:
            # Tentar bot√£o alternativo
            try:
                continuar_button = page.get_by_role("button", name="Continuar")
                continuar_button.click()
                exibir_mensagem("‚úÖ Bot√£o Continuar clicado")
            except:
                # Se n√£o encontrar bot√£o espec√≠fico, aguardar e continuar
                exibir_mensagem("‚ö†Ô∏è Bot√£o de confirma√ß√£o n√£o encontrado, aguardando...")
                time.sleep(5)
        
        # Aguardar navega√ß√£o
        time.sleep(3)
        
        exibir_mensagem("‚úÖ TELA 4 CONCLU√çDA!")
        return True
        
    except Exception as e:
        exibir_mensagem(f"‚ùå ERRO NA TELA 4: {e}")
        return False
















