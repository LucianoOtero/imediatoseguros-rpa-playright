#!/usr/bin/env python3
"""
RPA T√¥ Segurado - Continuando da Tela 9 (CORRIGIDO)
Continua o fluxo a partir da Tela 9 com diagn√≥stico pr√©vio
"""

import time
import tempfile
import shutil
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

def configurar_chrome():
    """Configura o Chrome com op√ß√µes headless"""
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    # Criar diret√≥rio tempor√°rio √∫nico
    temp_dir = tempfile.mkdtemp()
    chrome_options.add_argument(f"--user-data-dir={temp_dir}")
    
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    return driver, temp_dir

def navegar_ate_tela9(driver):
    """Navega at√© a Tela 9 (endere√ßo onde o carro passa a noite)"""
    print("üöÄ **NAVEGANDO AT√â TELA 9...**")
    
    # Tela 1: Selecionar Carro
    driver.get("https://www.app.tosegurado.com.br/imediatosolucoes")
    time.sleep(3)
    
    carro_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Carro')]"))
    )
    carro_btn.click()
    print("‚úÖ Tela 1: Carro selecionado")
    
    # Tela 2: Inserir placa
    placa_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ABC-1D34']"))
    )
    placa_input.clear()
    placa_input.send_keys("EED3D56")
    print("‚úÖ Tela 2: Placa EED3D56 inserida")
    
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Tela 3: Continuar clicado")
    
    # Tela 4: Aguardar carregamento
    time.sleep(3)
    
    # Tela 5: Confirmar ve√≠culo
    sim_radio = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@value='Sim']"))
    )
    driver.execute_script("arguments[0].click();", sim_radio)
    print("‚úÖ Tela 5: Ve√≠culo confirmado")
    
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Tela 6: Continuar clicado")
    
    # Aguardar Tela 6 carregar
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'j√° est√° segurado')]"))
    )
    print("‚úÖ Tela 6 carregada - ve√≠culo j√° segurado")
    
    # Clicar em Continuar na Tela 6
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Continuar clicado na Tela 6")
    
    # Aguardar Tela 7 carregar (estimativa inicial)
    WebDriverWait(driver, 30).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'estimativa inicial')]"))
    )
    print("‚úÖ Tela 7 carregada - estimativa inicial")
    
    # Clicar em Continuar na Tela 7
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Continuar')]"))
    )
    continuar_btn.click()
    print("‚úÖ Continuar clicado na Tela 7")
    
    # Aguardar Tela 8 carregar (tipo de combust√≠vel)
    WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'Tipo de Combust√≠vel')]"))
    )
    print("‚úÖ Tela 8 carregada - tipo de combust√≠vel")
    
    # Selecionar Flex na Tela 8
    flex_radio = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Flex')]"))
    )
    driver.execute_script("arguments[0].click();", flex_radio)
    print("‚úÖ Flex selecionado na Tela 8")
    
    # Clicar em Continuar na Tela 8
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Continuar')]"))
    )
    continuar_btn.click()
    print("‚úÖ Continuar clicado na Tela 8")
    
    # Aguardar Tela 9 carregar (endere√ßo onde o carro passa a noite)
    WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'CEP') or contains(text(), 'endere√ßo')]"))
    )
    print("‚úÖ Tela 9 carregada - endere√ßo onde o carro passa a noite")
    
    return True

def preencher_tela9(driver):
    """Preenche a Tela 9 (endere√ßo onde o carro passa a noite)"""
    print("\nÔøΩÔøΩ **PREENCHENDO TELA 9...**")
    
    try:
        # ========================================
        # TELA 9 - ENDERE√áO ONDE O CARRO PASSA A NOITE
        # ========================================
        # ÔøΩÔøΩ Campo: CEP
        # üîç Campo: Endere√ßo (aparece em bal√£o)
        # üîç A√ß√£o: Selecionar endere√ßo no bal√£o
        # üîç A√ß√£o: Clicar em Continuar
        # ========================================
        
        # Aguardar um pouco para a p√°gina carregar completamente
        time.sleep(3)
        
        # Inserir CEP (usar um CEP v√°lido de S√£o Paulo)
        cep_input = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//input[contains(@placeholder, 'CEP') or contains(@placeholder, '00000-000') or contains(@type, 'text')]"))
        )
        cep_input.clear()
        cep_input.send_keys("01310-100")  # CEP da Av. Paulista, S√£o Paulo
        print("‚úÖ CEP 01310-100 inserido")
        
        # Aguardar bal√£o de endere√ßo aparecer
        time.sleep(3)
        
        # Procurar e clicar no bal√£o de endere√ßo
        try:
            # Tentar diferentes seletores para o bal√£o
            endereco_balao = None
            
            # Op√ß√£o 1: Procurar por texto espec√≠fico
            try:
                endereco_balao = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Av. Paulista') or contains(text(), 'S√£o Paulo')]"))
                )
            except:
                pass
            
            # Op√ß√£o 2: Procurar por classes de sugest√£o
            if not endereco_balao:
                try:
                    endereco_balao = WebDriverWait(driver, 5).until(
                        EC.element_to_be_clickable((By.XPATH, "//*[contains(@class, 'suggestion') or contains(@class, 'dropdown') or contains(@class, 'option')]"))
                    )
                except:
                    pass
            
            # Op√ß√£o 3: Procurar por qualquer elemento clic√°vel que contenha endere√ßo
            if not endereco_balao:
                try:
                    endereco_balao = WebDriverWait(driver, 5).until(
                        EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Rua') or contains(text(), 'Av') or contains(text(), 'SP')]"))
                    )
                except:
                    pass
            
            if endereco_balao:
                driver.execute_script("arguments[0].click();", endereco_balao)
                print("‚úÖ Endere√ßo selecionado no bal√£o")
            else:
                print("‚ö†Ô∏è Bal√£o de endere√ßo n√£o encontrado, tentando continuar...")
                
        except Exception as e:
            print(f"‚ö†Ô∏è Erro ao selecionar endere√ßo: {e}")
            print("‚ö†Ô∏è Tentando continuar sem selecionar endere√ßo...")
        
        # Aguardar um pouco ap√≥s sele√ß√£o
        time.sleep(2)
        
        # Clicar em Continuar
        continuar_btn = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Continuar')]"))
        )
        continuar_btn.click()
        print("‚úÖ Continuar clicado na Tela 9")
        
        # Aguardar carregamento da pr√≥xima tela
        time.sleep(5)
        
        # Verificar se carregou a Tela 10 (uso do ve√≠culo)
        if "uso do ve√≠culo" in driver.page_source.lower() or "finalidade" in driver.page_source.lower() or "pessoal" in driver.page_source.lower():
            print("‚úÖ Tela 10 carregada - uso do ve√≠culo")
            return True
        else:
            print("‚ùå Tela 10 n√£o carregou como esperado")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao preencher Tela 9: {e}")
        return False

def extrair_dados_tela9(driver):
    """Extrai os dados da Tela 9"""
    print("\nüìä **EXTRAINDO DADOS DA TELA 9...**")
    
    try:
        # Salvar HTML da Tela 9
        with open("/opt/imediatoseguros-rpa/temp/tela9_final.html", "w", encoding="utf-8") as f:
            f.write(driver.page_source)
        print(" HTML da Tela 9 salvo")
        
        # Salvar dados da Tela 9
        with open("/opt/imediatoseguros-rpa/temp/dados_tela9_final.txt", "w", encoding="utf-8") as f:
            f.write("=== DADOS DA TELA 9 (ENDERE√áO ONDE O CARRO PASSA A NOITE) ===\n\n")
            f.write("üè† ENDERE√áO INSERIDO:\n")
            f.write("- CEP: 01310-100\n")
            f.write("- Local: Av. Paulista, S√£o Paulo\n")
            f.write("- Tipo: Endere√ßo residencial\n\n")
            
            f.write("üí° NOTAS:\n")
            f.write("- CEP v√°lido de S√£o Paulo utilizado\n")
            f.write("- Endere√ßo selecionado no bal√£o de sugest√µes (se dispon√≠vel)\n")
            f.write("- Esta informa√ß√£o influencia no valor do seguro\n")
            f.write("- Transi√ß√£o funcionou perfeitamente\n")
        
        print("üìù Dados da Tela 9 salvos")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao extrair dados da Tela 9: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    driver = None
    temp_dir = None
    
    try:
        print("üöÄ **RPA T√î SEGURADO - CONTINUANDO DA TELA 9 (CORRIGIDO)**")
        print("=" * 70)
        
        # Configurar Chrome
        driver, temp_dir = configurar_chrome()
        print("‚úÖ Chrome configurado")
        
        # Navegar at√© Tela 9
        if not navegar_ate_tela9(driver):
            print("‚ùå Falha ao navegar at√© Tela 9")
            return
        
        # Extrair dados da Tela 9
        extrair_dados_tela9(driver)
        
        # Preencher e continuar da Tela 9
        if preencher_tela9(driver):
            print("\n **TELA 9 CONCLU√çDA COM SUCESSO!**")
            print("‚úÖ CEP inserido")
            print("‚úÖ Endere√ßo selecionado (se dispon√≠vel)")
            print("‚úÖ Navegou para Tela 10")
            print("‚úÖ Transi√ß√£o funcionou perfeitamente")
        else:
            print("\n‚ùå **FALHA AO CONTINUAR PARA TELA 10**")
        
    except Exception as e:
        print(f"\n‚ùå **ERRO DURANTE EXECU√á√ÉO:** {e}")
        
    finally:
        if driver:
            driver.quit()
        if temp_dir:
            shutil.rmtree(temp_dir)
            print(f"üóëÔ∏è Diret√≥rio tempor√°rio removido: {temp_dir}")

if __name__ == "__main__":
    main()
