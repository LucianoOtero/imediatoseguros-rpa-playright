# PARTE 4: FUN√á√ÉO PRINCIPAL E MONTAGEM FINAL

def main():
    """Fun√ß√£o principal"""
    print("üöÄ **RPA T√î SEGURADO - FLUXO CORRIGIDO FINAL**")
    print("=" * 80)
    print("üéØ OBJETIVO: Fluxo correto das telas com seletores que funcionaram")
    print(" CORRE√á√ÉO: Tela 4 = Ve√≠culo segurado, Tela 5 = Estimativa inicial")
    print("‚ö° M√âTODO: Delays extremos + Seletores testados + Fluxo correto")
    print("üìä BONUS: Capturar dados da estimativa inicial (Tela 5)")
    print("üìù NOTA: Fluxo real das telas corrigido pelo usu√°rio")
    print("=" * 80)
    
    inicio = datetime.now()
    print(f"‚è∞ In√≠cio: {inicio.strftime('%Y-%m-%d %H:%M:%S')}")
    
    driver = None
    temp_dir = None
    
    try:
        # Configurar Chrome
        driver, temp_dir = configurar_chrome()
        print("‚úÖ Chrome configurado")
        
        # Navegar at√© Tela 3
        if not navegar_ate_tela3(driver):
            print("‚ùå Erro: Falha ao navegar at√© Tela 3")
            return
        
        # Implementar Tela 4 (CORRE√á√ÉO: Ve√≠culo j√° est√° segurado)
        if not implementar_tela4(driver):
            print("‚ùå Erro: Falha ao implementar Tela 4")
            return
        
        # Implementar Tela 5 (Estimativa inicial - AGORA DEVE FUNCIONAR!)
        if not implementar_tela5(driver):
            print("‚ùå Erro: Falha ao implementar Tela 5")
            return
        
        # Implementar Tela 6 (Tipo de combust√≠vel + checkboxes)
        if not implementar_tela6(driver):
            print("‚ùå Erro: Falha ao implementar Tela 6")
            return
        
        # Implementar Tela 7 (Endere√ßo de pernoite)
        if not implementar_tela7(driver):
            print("‚ùå Erro: Falha ao implementar Tela 7")
            return
        
        # Implementar Tela 8 (Finalidade do ve√≠culo)
        if not implementar_tela8(driver):
            print("‚ùå Erro: Falha ao implementar Tela 8")
            return
        
        # Implementar Tela 9 (Dados pessoais)
        if not implementar_tela9(driver):
            print("‚ùå Erro: Falha ao implementar Tela 9")
            return
        
        # Implementar Tela 10 (Condutor principal)
        if not implementar_tela10(driver):
            print("‚ùå Erro: Falha ao implementar Tela 10")
            return
        
        print("\n" + "=" * 80)
        print("üéâ **RPA EXECUTADO COM SUCESSO! TODAS AS 10 TELAS IMPLEMENTADAS!**")
        print("=" * 80)
        print(f"‚úÖ Total de telas executadas: 10")
        print(f"‚úÖ Tela 1: Sele√ß√£o do tipo de seguro (Carro)")
        print(f"‚úÖ Tela 2: Inser√ß√£o da placa (EED3D56)")
        print(f"‚úÖ Tela 3: Confirma√ß√£o da placa")
        print(f"‚úÖ Tela 4: Ve√≠culo j√° est√° segurado (N√£o selecionado)")
        print(f"‚úÖ Tela 5: Estimativa inicial (dados capturados!)")
        print(f"‚úÖ Tela 6: Tipo de combust√≠vel (Flex)")
        print(f"‚úÖ Tela 7: Endere√ßo de pernoite (CEP 03084-000)")
        print(f"‚úÖ Tela 8: Finalidade do ve√≠culo (Pessoal)")
        print(f"‚úÖ Tela 9: Dados pessoais (LUCIANO OTERO)")
        print(f"‚úÖ Tela 10: Condutor principal (Sim)")
        print(f"üìÅ Todos os arquivos salvos em: /opt/imediatoseguros-rpa/temp/")
        
    except Exception as e:
        print(f"‚ùå **ERRO GERAL DURANTE EXECU√á√ÉO:** {e}")
    
    finally:
        # Limpeza
        if driver:
            driver.quit()
        if temp_dir and os.path.exists(temp_dir):
            shutil.rmtree(temp_dir)
            print(f"üóëÔ∏è Diret√≥rio tempor√°rio removido: {temp_dir}")
        
        fim = datetime.now()
        print(f"‚è∞ Fim: {fim.strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()
