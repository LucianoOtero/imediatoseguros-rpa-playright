#!/usr/bin/env python3
"""
IDENTIFICAR TELA 5: Executa at√© Tela 5 e para para identifica√ß√£o dos elementos
"""

import json
import sys
import time
from playwright.sync_api import sync_playwright


def main():
    """Fun√ß√£o principal"""
    print("üéØ IDENTIFICANDO ELEMENTOS DA TELA 5")
    print("=" * 45)
    
    try:
        # Carregar par√¢metros
        with open('parametros.json', 'r', encoding='utf-8') as f:
            parametros = json.load(f)
        
        print("‚úÖ Par√¢metros carregados")
        print(f"üöó Placa: {parametros['placa']}")
        print(f"üöó Ve√≠culo segurado: {parametros['veiculo_segurado']}")
        
        # Configurar browser
        print("\nüñ•Ô∏è Configurando browser...")
        playwright = sync_playwright().start()
        browser = playwright.chromium.launch(headless=False)
        context = browser.new_context(viewport={'width': 1139, 'height': 1375})
        page = context.new_page()
        
        # Navegar para o site
        print("\nüåê Navegando para o site...")
        page.goto("https://www.app.tosegurado.com.br/imediatoseguros")
        time.sleep(3)
        
        # TELA 1: Clicar no bot√£o "Carro"
        print("\nüì± TELA 1: Selecionando 'Carro'...")
        try:
            botao_carro = page.locator("button.group").first
            if botao_carro.is_visible():
                texto_elemento = botao_carro.text_content().strip()
                if "Carro" in texto_elemento:
                    botao_carro.click()
                    print("‚úÖ Bot√£o 'Carro' clicado com sucesso")
                    print(f"   ‚Üí Seletor usado: button.group")
                    print(f"   ‚Üí Texto confirmado: '{texto_elemento}'")
                    
                    # Aguardar navega√ß√£o
                    time.sleep(5)
                else:
                    print("‚ùå ERRO: Elemento encontrado mas n√£o √© o bot√£o 'Carro'")
                    return False
            else:
                print("‚ùå ERRO: Bot√£o 'Carro' n√£o est√° vis√≠vel")
                return False
        except Exception as e:
            print(f"‚ùå ERRO na Tela 1: {str(e)}")
            return False
        
        # TELA 2: Preencher placa
        print("\nüì± TELA 2: Inserindo placa...")
        try:
            # Preencher placa
            campo_placa = page.locator("#placaTelaDadosPlaca").first
            if campo_placa.is_visible():
                campo_placa.click()
                print("‚úÖ Campo de placa clicado")
                
                campo_placa.fill(parametros['placa'])
                print(f"‚úÖ Placa {parametros['placa']} inserida com sucesso")
                print(f"   ‚Üí Seletor usado: #placaTelaDadosPlaca")
                
                time.sleep(2)
                
                # Clicar no bot√£o "Continuar"
                botao_continuar = page.locator("#gtm-telaDadosAutoCotarComPlacaContinuar").first
                if botao_continuar.is_visible():
                    botao_continuar.click()
                    print("‚úÖ Bot√£o 'Continuar' clicado com sucesso")
                    print(f"   ‚Üí Seletor usado: #gtm-telaDadosAutoCotarComPlacaContinuar")
                    
                    time.sleep(3)
                else:
                    print("‚ùå ERRO: Bot√£o 'Continuar' n√£o est√° vis√≠vel")
                    return False
            else:
                print("‚ùå ERRO: Campo de placa n√£o est√° vis√≠vel")
                return False
        except Exception as e:
            print(f"‚ùå ERRO na Tela 2: {str(e)}")
            return False
        
        # TELA 3: Clicar em "Continuar"
        print("\nüì± TELA 3: Clicando em 'Continuar'...")
        try:
            botao_continuar = page.locator("#gtm-telaInfosAutoContinuar").first
            if botao_continuar.is_visible():
                botao_continuar.click()
                print("‚úÖ Bot√£o 'Continuar' clicado com sucesso")
                print(f"   ‚Üí Seletor usado: #gtm-telaInfosAutoContinuar")
                
                time.sleep(3)
            else:
                print("‚ùå ERRO: Bot√£o 'Continuar' n√£o est√° vis√≠vel")
                return False
        except Exception as e:
            print(f"‚ùå ERRO na Tela 3: {str(e)}")
            return False
        
        # TELA 4: Selecionar radio "N√£o"
        print("\nüì± TELA 4: Selecionando 'N√£o' para ve√≠culo segurado...")
        try:
            # Selecionar radio "N√£o"
            radio_nao = page.locator("text=N√£o").first
            if radio_nao.is_visible():
                radio_nao.click()
                print("‚úÖ Radio 'N√£o' selecionado com sucesso")
                print(f"   ‚Üí Seletor usado: text=N√£o")
                
                time.sleep(2)
                
                # Clicar no bot√£o "Continuar"
                botao_continuar = page.locator("#gtm-telaRenovacaoVeiculoContinuar").first
                if botao_continuar.is_visible():
                    botao_continuar.click()
                    print("‚úÖ Bot√£o 'Continuar' clicado com sucesso")
                    print(f"   ‚Üí Seletor usado: #gtm-telaRenovacaoVeiculoContinuar")
                    
                    time.sleep(3)
                else:
                    print("‚ùå ERRO: Bot√£o 'Continuar' n√£o est√° vis√≠vel")
                    return False
            else:
                print("‚ùå ERRO: Radio 'N√£o' n√£o est√° vis√≠vel")
                return False
        except Exception as e:
            print(f"‚ùå ERRO na Tela 4: {str(e)}")
            return False
        
        # TELA 5: PARAR PARA IDENTIFICA√á√ÉO
        print("\nüì± TELA 5: PARADO PARA IDENTIFICA√á√ÉO DOS ELEMENTOS")
        print("=" * 50)
        print("üîç INFORMA√á√ïES DA P√ÅGINA ATUAL:")
        print(f"   ‚Üí URL: {page.url}")
        print(f"   ‚Üí T√≠tulo: {page.title}")
        
        # Tentar identificar elementos
        print("\nüîç TENTANDO IDENTIFICAR ELEMENTOS:")
        
        # 1. Procurar por bot√µes "Continuar"
        botoes_continuar = page.locator("button").filter(has_text="Continuar")
        print(f"   ‚Üí Bot√µes 'Continuar' encontrados: {botoes_continuar.count()}")
        
        # 2. Procurar por elementos com "estimativa"
        elementos_estimativa = page.locator("text=estimativa")
        print(f"   ‚Üí Elementos com 'estimativa': {elementos_estimativa.count()}")
        
        # 3. Procurar por elementos com "carrossel"
        elementos_carrossel = page.locator("text=carrossel")
        print(f"   ‚Üí Elementos com 'carrossel': {elementos_carrossel.count()}")
        
        # 4. Procurar por elementos com "cobertura"
        elementos_cobertura = page.locator("text=cobertura")
        print(f"   ‚Üí Elementos com 'cobertura': {elementos_cobertura.count()}")
        
        # 5. Procurar por pre√ßos (R$)
        precos = page.locator("text=R$")
        print(f"   ‚Üí Elementos com 'R$': {precos.count()}")
        
        # 6. Procurar por seguradoras
        seguradoras = page.locator("text=Seguradora")
        print(f"   ‚Üí Elementos com 'Seguradora': {seguradoras.count()}")
        
        print("\n‚è∏Ô∏è BROWSER PAUSADO - AGUARDANDO SUAS INSTRU√á√ïES")
        print("=" * 50)
        print("Por favor, me ajude a identificar:")
        print("1. Qual √© o t√≠tulo/texto desta tela?")
        print("2. Existe algum bot√£o 'Continuar'? Qual o ID/classe?")
        print("3. Existem cards de cobertura? Como identific√°-los?")
        print("4. Existem pre√ßos/valores? Como identific√°-los?")
        
        # Manter o browser aberto
        input("\nPressione ENTER para fechar o browser...")
        
        # Fechar browser
        browser.close()
        playwright.stop()
        
        return True
        
    except Exception as e:
        print(f"‚ùå ERRO GERAL: {str(e)}")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
