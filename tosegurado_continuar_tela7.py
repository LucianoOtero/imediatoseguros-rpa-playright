#!/usr/bin/env python3
"""
RPA T√¥ Segurado - Continuando da Tela 7
Continua o fluxo a partir da Tela 7 (estimativa inicial)
"""

import time
import tempfile
import shutil
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

def configurar_chrome():
    """Configura o Chrome com op√ß√µes headless"""
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    # Criar diret√≥rio tempor√°rio √∫nico
    temp_dir = tempfile.mkdtemp()
    chrome_options.add_argument(f"--user-data-dir={temp_dir}")
    
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=chrome_options)
    
    return driver, temp_dir

def navegar_ate_tela7(driver):
    """Navega at√© a Tela 7 (estimativa inicial)"""
    print("üöÄ **NAVEGANDO AT√â TELA 7...**")
    
    # Tela 1: Selecionar Carro
    driver.get("https://www.app.tosegurado.com.br/imediatosolucoes")
    time.sleep(3)
    
    carro_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Carro')]"))
    )
    carro_btn.click()
    print("‚úÖ Tela 1: Carro selecionado")
    
    # Tela 2: Inserir placa
    placa_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@placeholder='ABC-1D34']"))
    )
    placa_input.clear()
    placa_input.send_keys("EED3D56")
    print("‚úÖ Tela 2: Placa EED3D56 inserida")
    
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Tela 3: Continuar clicado")
    
    # Tela 4: Aguardar carregamento
    time.sleep(3)
    
    # Tela 5: Confirmar ve√≠culo
    sim_radio = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//input[@value='Sim']"))
    )
    driver.execute_script("arguments[0].click();", sim_radio)
    print("‚úÖ Tela 5: Ve√≠culo confirmado")
    
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Tela 6: Continuar clicado")
    
    # Aguardar Tela 6 carregar
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'j√° est√° segurado')]"))
    )
    print("‚úÖ Tela 6 carregada - ve√≠culo j√° segurado")
    
    # Clicar em Continuar na Tela 6
    continuar_btn = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//p[text()='Continuar']"))
    )
    continuar_btn.click()
    print("‚úÖ Continuar clicado na Tela 6")
    
    # Aguardar Tela 7 carregar (estimativa inicial)
    WebDriverWait(driver, 30).until(
        EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'estimativa inicial')]"))
    )
    print("‚úÖ Tela 7 carregada - estimativa inicial")
    
    return True

def extrair_dados_tela7(driver):
    """Extrai os dados da Tela 7"""
    print("\nüìä **EXTRAINDO DADOS DA TELA 7...**")
    
    try:
        # Salvar HTML da Tela 7
        with open("/opt/imediatoseguros-rpa/temp/tela7_estimativa.html", "w", encoding="utf-8") as f:
            f.write(driver.page_source)
        print("ÔøΩÔøΩ HTML da Tela 7 salvo")
        
        # Extrair valores das coberturas
        coberturas = []
        
        # Buscar por valores
        valores = driver.find_elements(By.XPATH, "//*[contains(text(), 'R$')]")
        for valor in valores:
            if "De" in valor.text or "at√©" in valor.text:
                coberturas.append(valor.text.strip())
        
        # Buscar por tipos de cobertura
        tipos = driver.find_elements(By.XPATH, "//*[contains(text(), 'Cobertura')]")
        
        print(f"üí∞ Valores encontrados: {len(coberturas)}")
        print(f"üõ°Ô∏è Tipos de cobertura: {len(tipos)}")
        
        # Salvar dados da Tela 7
        with open("/opt/imediatoseguros-rpa/temp/dados_tela7.txt", "w", encoding="utf-8") as f:
            f.write("=== DADOS DA TELA 7 (ESTIMATIVA INICIAL) ===\n\n")
            f.write("COBERTURAS:\n")
            for tipo in tipos:
                f.write(f"- {tipo.text}\n")
            f.write("\nVALORES:\n")
            for cobertura in coberturas:
                f.write(f"- {cobertura}\n")
        
        print("üìù Dados da Tela 7 salvos")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao extrair dados da Tela 7: {e}")
        return False

def continuar_tela7(driver):
    """Continua para a pr√≥xima tela (Tela 8)"""
    print("\nÔøΩÔøΩ **CONTINUANDO PARA TELA 8...**")
    
    try:
        # Procurar bot√£o Continuar na Tela 7
        continuar_btn = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//*[contains(text(), 'Continuar')]"))
        )
        continuar_btn.click()
        print("‚úÖ Continuar clicado na Tela 7")
        
        # Aguardar carregamento da pr√≥xima tela
        time.sleep(5)
        
        # Verificar se carregou a Tela 8 (tipo de combust√≠vel)
        if "Tipo de Combust√≠vel" in driver.page_source:
            print("‚úÖ Tela 8 carregada - tipo de combust√≠vel")
            return True
        elif "Flex" in driver.page_source and "Gasolina" in driver.page_source:
            print("‚úÖ Tela 8 carregada - op√ß√µes de combust√≠vel detectadas")
            return True
        else:
            print("‚ùå Tela 8 n√£o carregou como esperado")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao continuar da Tela 7: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    driver = None
    temp_dir = None
    
    try:
        print("üöÄ **RPA T√î SEGURADO - CONTINUANDO DA TELA 7**")
        print("=" * 60)
        
        # Configurar Chrome
        driver, temp_dir = configurar_chrome()
        print("‚úÖ Chrome configurado")
        
        # Navegar at√© Tela 7
        if not navegar_ate_tela7(driver):
            print("‚ùå Falha ao navegar at√© Tela 7")
            return
        
        # Extrair dados da Tela 7
        extrair_dados_tela7(driver)
        
        # Continuar para Tela 8
        if continuar_tela7(driver):
            print("\nÔøΩÔøΩ **TELA 7 CONCLU√çDA COM SUCESSO!**")
            print("‚úÖ Dados extra√≠dos e salvos")
            print("‚úÖ Navegou para Tela 8")
        else:
            print("\n‚ùå **FALHA AO CONTINUAR PARA TELA 8**")
        
    except Exception as e:
        print(f"\n‚ùå **ERRO DURANTE EXECU√á√ÉO:** {e}")
        
    finally:
        if driver:
            driver.quit()
        if temp_dir:
            shutil.rmtree(temp_dir)
            print(f"üóëÔ∏è Diret√≥rio tempor√°rio removido: {temp_dir}")

if __name__ == "__main__":
    main()
